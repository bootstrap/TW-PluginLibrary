[
    {
        "title": "$:/plugins/kookma/commander",
        "description": "Tiddler Commander",
        "author": "Mohammad Rahmani",
        "version": "2.1.0",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/Shiraz",
        "list": "readme history license authors",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Tiddler Commander\nTiddler Commander, in short ''Commander'' is a unique tool for batch operations on tiddlers. Commander has the below features\n\n* Bulk tiddler creation/deletion\n* Combo search to filter and select tiddlers\n* Title operation: add, remove prefixes and suffixes, also remove cahras form begining and end of title (on renaming tiddlers, [[relink|$:/plugins/kookma/commander/help/uicomp/relink]] can be used to update title in other tiddlers)\n* Tag operation: add, remove, replace\n* Field operation: add, remove, rename, and set field value\n* SNR, search and replace in all fields including text, tags, //title//, and common fields\n* Inspect, to review and inspect tiddlers in one place, scroll among them and edit all fields (including common fields), tags, text (title is an exception!)\n* Log, create logs of all operations\n* Search, //save and load// any combination of filter search\n\n; Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Commander/\n* Code: https://github.com/kookma/TW-Commander\n",
        "requires-reload": "yes"
    },
    {
        "title": "$:/plugins/kookma/favorites",
        "description": "Favorites",
        "author": "Mohammad Rahmani",
        "version": "4.4.0",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/TW-Favorites",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Favorites\nA favorite item also called a bookmark is a shortcut, you are creating for quick access to it. You can access that bookmark at any time and view that as many times as you want without having to search and find it again.\n\n''Favorites plugin'' is a set of tool for creating favorites (bookmarks) in Tiddlywiki. Each favorite item is a shortcut to a tiddler.\n\nThe Favorites plugin contains three modes\n\n* ''flat mode'': one favorite list, no folder\n* ''structured mode'': use folder, search tool, export and delete tool\n* ''frozen list'': read only, simple table of content style\n\n;Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Favorites/\n* Code: https://github.com/kookma/TW-Favorites\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/pinboard",
        "description": "Pinboard",
        "author": "Mohammad Rahmani",
        "version": "0.9",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-Pinboard",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "This is a plugin to create a [[pinboard|https://en.wikipedia.org/wiki/Bulletin_board]]\n\n* a pinboard contains some notices pinned on a board\n* a notice is a tiddler tagged with `pin`\n* a notice is removed from board if it is tagged with `done`\n* a notice has a priority. The priority of a notice tiddler is set through adding a field entitled `priority`\n* The priority filed value can only be chosen from the below value\n** red\n** blue\n** green\n** yellow\n* The priority actually set the color of pin and the background color of note\n* If the priority field is missed the white color is used!\n\n!! How to create a pinboard\nA macro entitled `pinboard-ui` creates a pinboard. It lists and displays all notices in a multi column layout.\n\nThe syntax is as below\n\n```\n<<pinboard-ui>>\n```\n\n* a notice shown by `pinboard-ui` on hover\n**  has a link to the notice tiddler, on click it will be opened and get focused\n**  has a folding editor, on click the entry can be edited\n* a notice shown by `pinboard-ui` has a toggle button (the colored pin) to tag the notice as `done`\n\n;Note\n:When a notice tagged as done it will be removed from the pinboard\n\n!! How to create a new notice\nThere are two routes to do this\n\n# In the pinboard you see a gray icon floating right, on click it will create a new notice with yellow priority\n# You can also create a notice from a new tiddler or from existing ones as below\n#* create new tiddler, if you want to use exsiting one, edit it\n#* tag it with `pin`\n#* add a custom field called `priority` and set a value like red, yellow, blue, or green\n#* save the tiddler, that's all.\n\n!! Use online Google font\nIt is possible to use the script font Satisfy from Google as defualt font for notices. To set Google font open the setting tab from Plugins page, Pinboard tab or directly from [[$:/plugins/kookma/pinboard]] as below\n\n{{$:/plugins/kookma/pinboard/settings}}\n\n!! Cork board\nTo add a corkboard as a background to your pinboard, so as follow\n\n* Create a new tiddler\n* Fill in the text with `<<pinboard-ui>>` \n* add a custom field entitled `class`\n* fill in the value with `corkboard`\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/searchwikis",
        "description": "Searchwikis",
        "author": "Mohammad Rahmani",
        "version": "1.3.0",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/TW-Searchwikis",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Searchwikis\nSearchwikis plugin uses index (dataTiddler) to search multiple external Tiddlywikis. It has two parts\n\n# An indexer, to build an index of all tiddlers in an external wiki\n# A search tool to search indexes and display a link to a tiddler found in an external wiki\n\nThen one master wiki can hosts many index tiddlers and lets to search several external wikis through index tiddlers.\n\n;Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Searchwikis/\n* Code: https://github.com/kookma/TW-Searchwikis\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/shiraz",
        "description": "Shiraz",
        "author": "Mohammad Rahmani",
        "version": "2.1.1",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-Shiraz",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Shiraz\nShiraz is a small framework including stylesheets, templates and macros to create stylish contents in Tiddlywiki. It uses modified CSS classes from [[Bootstrap|https://getbootstrap.com/]] 4.3.1. Shiraz has customized elements like alerts, cards, panels, images, static tables, dynamic tables, badges, texts, ...\n\n;Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Shiraz/\n* Code: https://github.com/kookma/TW-Shiraz\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/slider",
        "description": "Slider",
        "author": "Mohammad Rahmani",
        "version": "1.2.0",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-Slider",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "!! What ia slider plugin?\nSlider is a small plugin to create an ordered set of tiddlers also called ''Trail''.\n\nA trail can be used to create a sequence of selected contents like step by step tutorial, guided help, lessons and similar.\n\nThe slider plugin user interface contains three sections\n\n# A sidebar tab called ''Trails'' to manage trails\n# A ''dashboard'' for each trail (where trail structure is managed)\n# Tiddlers in a trail, also called ''slides''\n\n!! How to create a trail\nFrom the sibebar tab ''Trails'' click on the ''Create new trail'' button. In the newly opened tiddler:\n\n# Enter a short name for //title//\n#* This title is used as a parent //tag// for all slides in the trail\n# Enter a meaningful caption to describe the subject of trail\n#* Caption is displayed in ''Trails'' sidebar tab, so it used to find and recognize the trail\n# Save the tiddler\n#* After saving the dashboard will be appeared\n#* Using dashboard, manage the trail\n\n!! Add slides to trail\nSlides (tiddlers) can be added to a specified trail in several ways including:\n\n# By clicking on the `New slide` button on the trail dashboard\n# By dragging and droping a tiddler into the `List of slides` on the trail dashboard\n# By opening the `sidebar / Trails` tab and then clicking on the `Add slide to ...` button\n# By creating new tiddler and tagging with the specified trail title\n# By tagging an exisiting tiddler with the specified trail title\n\n!! Create slide footer \n* The slider footer can be used to add a text to all slides in a trail.\n* The slider footer is an ordinary tiddler and can be opned and edited\n* The slider footer has the same title of trail with `-Footer` prefix and tagged with `slideFooter`\n* The footer can be used for date stamp, author and institution name or any other information you like.\n* The footer can be formatted for color, size, font and etc. It can accept all the standard markup.\n\n!! Navigate through slides\n# Set the desired trail as the active trail by opening it and clicking on `Set for presentation`\n# From the //List of slides// click on the first slide or any slide you like to start from\n# One the footer of newly opened slide, click on the next button to navigate to the next slide\n# You can click on the slide-list button to open a local window and see the list of all slides, then you can click on any slide you like and jump to that slide\n# The slide footer also has a //previous// button which lets to navigate to previous slide in the list\n\n\n!! Demo\nThere few trails for demonstration on\nhttps://kookma.github.io/slider/\n\n!! Installation\nSimply drag and drop the below ling into your wiki\n\n* $:/plugins/kookma/slider",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/solution",
        "description": "Solution Resource",
        "author": "Mohammad Rahmani",
        "version": "1.1.0",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-Solution",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Solution plugin\nThere are many questions and answers in [[TW Google forum|https://groups.google.com/forum/#!forum/tiddlywiki]], some of them shows elegant solution to raised questions and worth to be documented in a manner to be accessible easily later on.\n\nSolution is a small plugin to create solution tiddlers. It adds a button to page controls, on click, creates a tiddler tagged with `solution`, contains `keywords`, `responder`, and `url` fields. It then uses a view template to show the `responder` (author), reference post (`url`), and the `keywords` in a semantic way.\n\nThe `keywords` field acts like tags, so, clicking on them shows a list of all tiddlers tagged with this keyword or has this keyword in its `keywords` field.\n\n; Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Solution/\n* Code: https://github.com/kookma/TW-Solution\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/timelines",
        "description": "Timelines",
        "author": "Mohammad Rahmani",
        "version": "2.0.16",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-Timelines",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "!! How to use\n<<<\nTimelines is a collection of four macros for creating vertical and horizontal timeline and sequence. The content or description and data of events are stored in individual tiddlers. \n\nTimelines contain two timeline macros and two sequence macros. A sequence macro shows event contents in sequence not necessarily in chronological order. The order can be determined by tag or list field or other methods.\n\nThe date of events can be stored in a separate field or the `modified` field can be used.\n<<<\n\n!! Syntax\n<<<\n```\n<<timeline-horizontal filter limit:10 template:\"\" footer:\"footer\" \n                      class date:\"modified\" stateTiddler dateformat:\"YYYY\">>\n<<sequence-horizontal filter limit:10 template:\"\" footer:\"footer\" \n                      class date:\"modified\" stateTiddler dateformat:\"mmm DDth YYYY\">>\n\n<<timeline-vertical filter limit:10 template:\"\" footer:\"footer\" class date:\"modified\">>\n<<sequence-vertical filter limit:10 template:\"\" footer:\"footer\" class date:\"modified\">>\n```\n!! Content and parameters\n\n|Parameter |Type    |Description |h\n|filter    |required|a Tiddlywiki filter to select tiddlers for presentation |\n|limit  | optional|maximum number of tiddlers to be shown. Default value is 10|\n|template  |optional|a template to display the tiddler content|\n|footer |optional|the field name which stores an extra text to be displayed as footer|\n|class|optional|an extra class to customize how tiddler content is displayed|\n|date      |optional|the field name which stores a date in standard Tiddlywiki format. Default field is `modified`|\n|stateTiddler |optional|the name of a state tiddler to keep the state of events. Each call to macro needs a unique state tiddler|\n|dateformat |optional|only in `timeline-horizontal` and `timeline-vertical`, the format for displaying event date.|\n\nMore explanation with examples can be found at [[GitHub demo page|https://kookma.github.io/TW-Timelines/#Filter%20Parameter:%5B%5BFilter%20Parameter%5D%5D%20%5B%5BColor%20classes%5D%5D%20%5B%5BTemplate%20Parameter%5D%5D]].\n\n!!! The dateformat parameter\nThe dateformat lets to customize the event date displayed on the timeline.\n\n;timeline-horizontal\nFor `timeline-horizontal`  macro the default value is `YYYY`,  the other two forms of date are \n\n* `mmm DDth`, and \n* `0DD mmm YYYY`. \n\nOther format will not be displayed!\n\n;timeline-vertical\nFor the `timeline-vertical` macro the default value is `mmm DDth YYYY`,  the other two forms of date are \n\n* `mmm DDth` to show only the month and day and hide year\n* `YYYY` to show only year and hide the month\n\nOther format will not be displayed!\n\n!!! Important note\nWhen the `timeline-horizontal` is used, the timeline at first does not show the event date on the line. This is because the macro uses a state tiddler at first it does not exist. Simply click on pull previous or pull next buttons to create the state tiddler and show the events date. Note that the state tiddlers here are prefixed with `$:/state-tl/ilam` and so when TW closed and reopened the state tiddler will not removed.\n<<<\n\n! Install\n<<<\nSimply drag and drop $:/plugins/kookma/timelines into your wiki\n<<<\n\n\n! Project code and demo\n<<<\n* [[GitHub demo page|https://kookma.github.io/TW-Timelines/]]\n* [[GitHub code page|https://github.com/kookma/TW-Timelines]]\n<<<",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/toc",
        "description": "TOC: Table of contents and hierarchical navigation",
        "author": "Mohammad Rahmani",
        "version": "1.3.0",
        "core-version": ">=5.1.21",
        "source": "https://github.com/kookma/TW-TOC",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "TOC plugin contains several macros, stylesheets and templates to create table of contents and navigator buttons. In contrast to Tiddlywiki core macros, the TOC plugin has many extra features including\n\n* non recursive two level toc\n* hierarchical navigation\n* exclude feature to exclude a branch or specific entries\n* track and highlight the TOC entry opened from table of contents or by navigation buttons\n\nLike core toc macro, TOC plugin supports also the recursive multi level table of contents, but here, it also support hierarchical navigation.",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/todolist",
        "description": "Todolist",
        "author": "Mohammad Rahmani",
        "version": "1.2.1",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/TW-Todolist",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Todolist\nTodolist is a small pure wikitext plugin, contain all of the tasks that you need to complete on a given day. Todolist gives you the confidence that everything’s organized and accounted for, so you can make progress on the things that are important to you.\n\nYou can also make to-dos for major tasks like a project, a work assignment or an overall goal. Therefore, the overall purpose of creating a to-do is to remember tasks and prioritize them.\n\n\n;Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Todolist/\n* Code: https://github.com/kookma/TW-Todolist\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/trashbin",
        "description": "Trashbin",
        "author": "Mohammad Rahmani",
        "version": "1.2.1",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/TW-Trashbin",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Trashbin\nThe concept behind Trashbin plugin is to have a simple mechanism to move deleted tiddlers to Trashbin and be able to restore them later if required.\n\n; Code and demo\nFor learning plugin features, mechanism, terminology, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Trashbin/\n* Code: https://github.com/kookma/TW-Trashbin\n",
        "requires-reload": "no"
    },
    {
        "title": "$:/plugins/kookma/utility",
        "description": "Utility",
        "author": "Mohammad Rahmani",
        "version": "2.1.2",
        "core-version": ">=5.1.22",
        "source": "https://github.com/kookma/TW-Utility",
        "list": "readme history license",
        "dependents": "",
        "plugin-type": "plugin",
        "type": "application/json",
        "readme": "; Utility plugin\nThe utility plugin objective is to provide set of tools for developers and authors. These tools includes simple transclusions, show raw contents of tiddlers, author tools, wikitext macros, show fields in view mode, ...\n\n; Code and demo\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\n\n* Demo: https://kookma.github.io/TW-Utility/\n* Code: https://github.com/kookma/TW-Utility\n",
        "requires-reload": "no"
    }
]